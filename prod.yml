version: "3"

services:
  postgres:
    image: postgres:15
    env_file:
      - ./.envs/.prod
    ports:
      - 5432:5432
    networks:
      - backend_network
    volumes:
      - ./docker/database/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./docker/database/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

  postgres_exporter:
    image: bitnami/postgres-exporter:latest
    env_file:
      - ./.envs/.prod
    ports:
      - 9187:9187
    networks:
      - backend_network
    depends_on:
      - postgres
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    networks:
      - backend_network
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    depends_on:
      - postgres_exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    env_file:
      - ./.envs/.prod
    ports:
      - 3000:3000
    networks:
      - backend_network
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

  ubuntu:
    image: ubuntu:22.04
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    env_file:
      - ./.envs/.prod
    stdin_open: true
    tty: true
    ports:
      - 2222:2222
    networks:
      - backend_network

  n8n:
    image: n8nio/n8n:latest
    env_file:
      - ./.envs/.prod
    ports:
      - 5678:5678
    networks:
      - backend_network
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    restart: unless-stopped

  metabase:
    image: metabase/metabase:latest
    env_file:
      - ./.envs/.prod
    ports:
      - 3001:3000
    networks:
      - backend_network
    depends_on:
      - postgres
    restart: unless-stopped

  caddy:
    image: caddy:latest
    env_file:
      - ./.envs/.prod
    ports:
      - 80:80
      - 443:443
    networks:
      - backend_network
    volumes:
      - ./docker/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - prometheus
      - grafana
      - n8n
      - metabase
    restart: unless-stopped

networks:
  backend_network:

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  n8n_data:
  caddy_data:
  caddy_config:
